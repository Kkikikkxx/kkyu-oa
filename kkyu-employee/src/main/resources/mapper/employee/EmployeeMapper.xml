<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kkyu.employee.mapper.EmployeeMapper">

    <resultMap type="Employee" id="EmployeeResult">
        <result property="employeeId" column="employee_id"/>
        <result property="employeeCode" column="employee_code"/>
        <result property="employeeName" column="employee_name"/>
        <result property="gender" column="gender"/>
        <result property="birthDate" column="birth_date"/>
        <result property="hireDate" column="hire_date"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="idNumber" column="id_number"/>
        <result property="address" column="address"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectEmployeeVo">
        select employee_id, employee_code, employee_name, gender, birth_date, hire_date, phone, email, id_number, address, status, create_by, create_time, update_by, update_time, remark
        from sys_employee
    </sql>

    <select id="selectEmployeeList" parameterType="Employee" resultMap="EmployeeResult">
        <include refid="selectEmployeeVo"/>
        <where>
            <if test="employeeCode != null  and employeeCode != ''">
                and employee_code = #{employeeCode}
            </if>
            <if test="employeeName != null  and employeeName != ''">
                and employee_name like concat('%', #{employeeName}, '%')
            </if>
            <if test="phone != null  and phone != ''">
                and phone = #{phone}
            </if>
            <if test="status != null  and status != ''">
                and status = #{status}
            </if>
        </where>
    </select>

    <select id="selectEmployeeByEmployeeId" parameterType="Long"
            resultMap="EmployeeResult">
        <include refid="selectEmployeeVo"/>
        where employee_id = #{employeeId}
    </select>

    <insert id="insertEmployee" parameterType="Employee" useGeneratedKeys="true"
            keyProperty="employeeId">
        insert into sys_employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="employeeCode != null and employeeCode != ''">employee_code,
            </if>
            <if test="employeeName != null and employeeName != ''">employee_name,
            </if>
            <if test="gender != null and gender != ''">gender,
            </if>
            <if test="birthDate != null">birth_date,
            </if>
            <if test="hireDate != null">hire_date,
            </if>
            <if test="phone != null">phone,
            </if>
            <if test="email != null">email,
            </if>
            <if test="idNumber != null">id_number,
            </if>
            <if test="address != null">address,
            </if>
            <if test="status != null and status != ''">status,
            </if>
            <if test="createBy != null">create_by,
            </if>
            <if test="createTime != null">create_time,
            </if>
            <if test="updateBy != null">update_by,
            </if>
            <if test="updateTime != null">update_time,
            </if>
            <if test="remark != null">remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="employeeCode != null and employeeCode != ''">#{employeeCode},
            </if>
            <if test="employeeName != null and employeeName != ''">#{employeeName},
            </if>
            <if test="gender != null and gender != ''">#{gender},
            </if>
            <if test="birthDate != null">#{birthDate},
            </if>
            <if test="hireDate != null">#{hireDate},
            </if>
            <if test="phone != null">#{phone},
            </if>
            <if test="email != null">#{email},
            </if>
            <if test="idNumber != null">#{idNumber},
            </if>
            <if test="address != null">#{address},
            </if>
            <if test="status != null and status != ''">#{status},
            </if>
            <if test="createBy != null">#{createBy},
            </if>
            <if test="createTime != null">#{createTime},
            </if>
            <if test="updateBy != null">#{updateBy},
            </if>
            <if test="updateTime != null">#{updateTime},
            </if>
            <if test="remark != null">#{remark},
            </if>
        </trim>
    </insert>

    <update id="updateEmployee" parameterType="Employee">
        update sys_employee
        <trim prefix="SET" suffixOverrides=",">
            <if test="employeeCode != null and employeeCode != ''">employee_code =
                #{employeeCode},
            </if>
            <if test="employeeName != null and employeeName != ''">employee_name =
                #{employeeName},
            </if>
            <if test="gender != null and gender != ''">gender =
                #{gender},
            </if>
            <if test="birthDate != null">birth_date =
                #{birthDate},
            </if>
            <if test="hireDate != null">hire_date =
                #{hireDate},
            </if>
            <if test="phone != null">phone =
                #{phone},
            </if>
            <if test="email != null">email =
                #{email},
            </if>
            <if test="idNumber != null">id_number =
                #{idNumber},
            </if>
            <if test="address != null">address =
                #{address},
            </if>
            <if test="status != null and status != ''">status =
                #{status},
            </if>
            <if test="createBy != null">create_by =
                #{createBy},
            </if>
            <if test="createTime != null">create_time =
                #{createTime},
            </if>
            <if test="updateBy != null">update_by =
                #{updateBy},
            </if>
            <if test="updateTime != null">update_time =
                #{updateTime},
            </if>
            <if test="remark != null">remark =
                #{remark},
            </if>
        </trim>
        where employee_id = #{employeeId}
    </update>

    <delete id="deleteEmployeeByEmployeeId" parameterType="Long">
        delete
        from sys_employee where employee_id = #{employeeId}
    </delete>

    <delete id="deleteEmployeeByEmployeeIds" parameterType="String">
        delete from sys_employee where employee_id in
        <foreach item="employeeId" collection="array" open="(" separator="," close=")">
            #{employeeId}
        </foreach>
    </delete>
</mapper>